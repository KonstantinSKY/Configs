.PHONY: all mount defrag

LABEL = Work
DIR = Work
FS_TYPE = btrfs
OPTIONS = compress=zstd,noatime
DUMP = 0
PASS = 2
FSTAB = /etc/fstab
UUID = $(shell sudo blkid -s UUID -o value $$(sudo findfs LABEL=$(LABEL)))
ROOT_UUID = $(shell findmnt -no UUID /)
MOUNT_DIR = $(HOME)/$(DIR)

# Default target
all: mount

mount:
	@echo "üîç Searching for device with label '$(LABEL)'..."
	@if [ -z "$(UUID)" ]; then \
		echo "‚ùå Device with label '$(LABEL)' not found!"; exit 1; \
	else \
		echo "‚úÖ UUID found: $(UUID)"; \
	fi

	@echo "--------------------------------------------------------------"
	@echo "üìÅ Creating directory $(MOUNT_DIR) if it doesn't exist..."
	@mkdir -p "$(MOUNT_DIR)"
	@echo "--------------------------------------------------------------"
	@echo "üìå Checking if entry already exists in $(FSTAB)..."
	@if grep -q "$(UUID)" $(FSTAB); then \
		echo "‚ö†Ô∏è  Entry already exists in $(FSTAB). Skipping..."; \
	else \
		echo "üì¶ Backing up $(FSTAB) -> $(FSTAB).bak"; \
		sudo cp $(FSTAB) $(FSTAB).bak; \
		echo "üì• Adding new entry to $(FSTAB)..."; \
		echo "UUID=$(UUID) $(MOUNT_DIR) $(FS_TYPE) $(OPTIONS) $(DUMP) $(PASS)" | sudo tee -a $(FSTAB); \
	fi
	@$(MAKE) verify_fstab
	@echo "--------------------------------------------------------------"
	@echo "üîÑ Reloading systemd daemon..."
	@sudo systemctl daemon-reexec
	@echo "--------------------------------------------------------------"
	@echo "üì¶ Mounting all entries..."
	@sudo mount -a || echo "‚ùå Mount failed. Please check /etc/fstab or device."
	@echo "üìÇ Verifying mount status..."
	@if mount | grep -q "$(MOUNT_DIR)"; then \
		echo "‚úÖ Mounted successfully at $(MOUNT_DIR)"; \
	else \
		echo "‚ùå Mount failed. Check /etc/fstab and system logs."; \
		exit 1; \
	fi
	@echo "--------------------------------------------------------------"
	@echo "üìÇ Listing contents of $(MOUNT_DIR)..."
	@ls -la "$(MOUNT_DIR)"
	@echo "--------------------------------------------------------------"
	@echo "üîê Setting ownership and permissions for $(MOUNT_DIR)..."
	@sudo chown -R $(USER):$(USER) "$(MOUNT_DIR)"
	@sudo chmod -R 700 "$(MOUNT_DIR)"

	@echo "‚úÖ Done. $(DIR) is mounted with options: $(OPTIONS)."

# Manual defragmentation with compression
defrag:
	@echo "‚öôÔ∏è  Defragmenting and recompressing $(MOUNT_DIR) using zstd..."
	@sudo btrfs filesystem defragment -r -v -czstd "$(MOUNT_DIR)"
	@echo "‚úÖ Defragmentation completed."

defrag_root:
	@echo "‚öôÔ∏è  Full system defragmentation and compression (root Btrfs volume)..."
	sudo btrfs filesystem defragment -r -v -czstd /
	@echo "‚úÖ Defragmentation of root completed."

compress_root:
	@echo "üîç Checking root UUID: $(ROOT_UUID)"
	@if [ -z "$(ROOT_UUID)" ]; then \
		echo "‚ùå Cannot find root UUID"; exit 1; \
	fi
	@echo "--------------------------------------------------------------"
	@echo "üìã Checking /etc/fstab entry for root (/)..."
	@if grep -q "UUID=$(ROOT_UUID).* / " $(FSTAB); then \
		echo "‚ö†Ô∏è  Entry for root exists. Updating with new options..."; \
		sudo cp $(FSTAB) $(FSTAB).bak; \
		sudo sed -i "s|UUID=$(ROOT_UUID).* / .*|UUID=$(ROOT_UUID) / btrfs $(OPTIONS) 0 1|" $(FSTAB); \
	else \
		echo "üì• Adding root entry to $(FSTAB)..."; \
		echo "UUID=$(ROOT_UUID) / btrfs $(OPTIONS) 0 1" | sudo tee -a $(FSTAB); \
	fi
	@echo "--------------------------------------------------------------"
	@$(MAKE) verify_fstab
	@echo "üîÑ Reloading systemd daemon..."
	sudo systemctl daemon-reexec
	@echo "--------------------------------------------------------------"
	@echo "üîÅ Remounting root..."
	sudo mount -o remount /
	@echo "--------------------------------------------------------------"


	@echo "‚úÖ Root is mounted with $(OPTIONS)"


verify_fstab:
	@echo "üîç Verifying integrity of $(FSTAB)..."
	@sudo findmnt --verify || { \
		echo "‚ùå fstab verification failed! Restoring backup..."; \
		echo "‚ö†Ô∏è  Problematic /etc/fstab:"; \
		sudo cat $(FSTAB); \
		echo "üîÅ Restoring from backup..."; \
		sudo cp $(FSTAB).bak $(FSTAB); \
		exit 1; \
	}
	sudo cat $(FSTAB)
	@echo "--------------------------------------------------------------"
